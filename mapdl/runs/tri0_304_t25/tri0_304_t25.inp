! Parametric APDL input for a 0°-family triangular isogrid (starter)
! Auto-generated by mapdl/runner.py
! Case ID: tri0_304_t25  Material: AISI 304
! R=0.55 [m], L=1.0 [m], a=0.35 [m], n_theta=10, b=0.012 [m], t=0.0025 [m], dz=0.3031088913245535 [m]

/prep7
! Material definition
mp, ex, 1, 193000000000.0
mp, prxy, 1, 0.29
mp, dens, 1, 8000.0

! Element type: BEAM188 for ribs
et, 1, 188
keyopt, 1, 3, 3   ! 3D, 2-node

! Section: rectangular b x t
sect, 1, beam, rect, RIB
secdata, 0.012, 0.0025

! Representative unwrapped panel width (circumference segment per cell)
! Width per cell in unwrapped domain is a
*set,_a, 0.35
*set,_dz, 0.3031088913245535
*set,_L, 1.0
*set,_nx, 3      ! small starter grid across width (cells)
*set,_nz, nint(_L/_dz) + 1
*set,u_top,0
*set,LBF,0
*set,SMAX,0
*set,_face_load,100.0
*set,_face_area,0.008619744843286786
*set,_face_pressure,11601.271478224999
*set,_mass_total,13.725374393837834
*set,_load_pair,2*_face_load

! Build 0° family of ribs along axial direction at x = i*_a
! Create keypoints and lines in a simple grid, then connect axial ribs

! Origin at (0,0,0); x = circumferential-unwrapped, y = radial (unused), z = axial
*do,i,0,_nx,1
  *set,xloc, i*_a
  *do,k,0,_nz-1,1
    *set,zloc, k*_dz
    k, 1000 + i*100 + k, xloc, 0, zloc
  *enddo
  *do,k,0,_nz-2,1
    l, 1000 + i*100 + k, 1000 + i*100 + (k+1)
  *enddo
*enddo

type,1
mat,1
secnum,1
lesize, all, , , 1
lmshape,1,2
amesh, all

/solu
antype, static, new

! Simple boundary: fix bottom edge (z=0) nodes, apply small axial tip load
! Find nodes at z=0 and z=L
cmsel, s, node, , , ,
nsle, s
*get,nmin,node,,num,min
*get,nmax,node,,num,max

! Build nodal components by z-location via selection by location
allsel,all
cmsel, all
nsll,s,1
nsle,s

allsel,all
nsel, s, loc, z, 0
cm, LOADZ0, node
cmcopy, FIXZ0, LOADZ0
allsel, all
nsel, s, loc, z, _L
cm, LOADZL, node
allsel, all

d, FIXZ0, all, 0

! Distributed axial loads applied as node-equivalent forces on top and bottom faces
cmsel, s, node, LOADZL
*get,_ntop,node,,count
*if,_ntop,gt,0,then
  *set,_fz_top,_face_load/max(_ntop,1)
  f, all, fz, _fz_top
*endif
allsel,all

cmsel, s, node, LOADZ0
*get,_nbot,node,,count
*if,_nbot,gt,0,then
  *set,_fz_bot,-_face_load/max(_nbot,1)
  f, all, fz, _fz_bot
*endif
allsel,all

outres,all,none
outres,elem,yes
outres,node,yes

solve
finish

/post1
set,last
! Save key results
cmsel,s,LOADZL
*get,u_top,node,0,max,u,z
allsel,all
*get,SMAX,elem,0,max,seqv
finish

/solu
antype,buckle
buckopt,lanb,1
pstres,on
solve
finish

/post1
set,1,1
*get,LBF,MODE,1,FREQ
finish

save
finish

*set,_buckling_face,LBF*_face_load
*set,_buckling_pair,2*_buckling_face
*set,_load_ref,abs(_load_pair)
*if,_load_ref,gt,1e-12,then
  *set,_tip_per_load,u_top/_load_ref
  *set,_sigma_per_load,SMAX/_load_ref
*else
  *set,_tip_per_load,0
  *set,_sigma_per_load,0
*endif
*if,_mass_total,gt,1e-12,then
  *set,_buckling_per_mass,_buckling_pair/_mass_total
*else
  *set,_buckling_per_mass,0
*endif

! Write summary CSV for downstream aggregation
*cfopen,tri0_304_t25_summary,csv
*vwrite,'case_id','material','mat_code','R_m','L_m','a_m','b_m','t_m','n_theta','tip_defl_m','buckling_factor','sigma_max_pa','axial_load_face_N','face_pressure_pa','load_pair_total_N','buckling_face_N','buckling_pair_N','total_mass_kg','buckling_per_mass','tip_per_load_m_per_N','sigma_per_load_pa_per_N'
(A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A,',',A)
*vwrite,'tri0_304_t25','AISI 304','304',0.55,1.0,0.35,0.012,0.0025,10,u_top,LBF,SMAX,_face_load,_face_pressure,_load_pair,_buckling_face,_buckling_pair,_mass_total,_buckling_per_mass,_tip_per_load,_sigma_per_load
(A,',',A,',',A,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',I8,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6,',',F12.6)
*cfclose
